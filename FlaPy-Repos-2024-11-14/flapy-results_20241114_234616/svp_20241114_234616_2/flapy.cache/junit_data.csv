file,class,name,verdict,message,errors_in_stacktrace,errors_in_system_err,type,num,test_to_be_run,order
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,14,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,14,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,14,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,14,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,14,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,14,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,14,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,14,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,133,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,133,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,133,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,133,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,133,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,133,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,133,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,133,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,176,,same
,samples.tests.test_exponential,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,176,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,176,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,176,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,176,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,176,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,176,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,176,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,159,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,159,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,159,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,159,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,159,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,159,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,159,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,159,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,64,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,64,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,64,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,64,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,64,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,64,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,64,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,64,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,7,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,7,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,7,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,7,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,7,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,7,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,7,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,7,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,5,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,5,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,5,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,5,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,5,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,5,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,5,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,5,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,55,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,55,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,55,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,55,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,55,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,55,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,55,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,55,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,111,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,111,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,111,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,111,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,111,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,111,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,111,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,111,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,100,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,100,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,100,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,100,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,100,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,100,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,100,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,100,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,16,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,16,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,16,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,16,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,16,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,16,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,16,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,16,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,131,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,131,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,131,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,131,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,131,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,131,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,131,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,131,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,1,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,1,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,1,,same
,samples.tests.test_normal,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,1,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,1,,same
,samples.tests.test_uniform,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,1,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,1,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,1,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,98,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,98,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,98,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,98,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,98,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,98,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,98,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,98,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,125,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,125,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,125,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,125,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,125,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,125,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,125,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,125,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,162,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,162,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,162,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,162,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,162,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,162,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,162,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,162,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,35,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,35,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,35,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,35,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,35,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,35,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,35,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,35,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,145,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,145,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,145,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,145,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,145,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,145,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,145,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,145,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,152,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,152,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,152,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,152,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,152,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,152,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,152,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,152,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,91,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,91,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,91,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,91,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,91,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,91,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,91,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,91,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,122,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,122,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,122,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,122,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,122,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,122,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,122,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,122,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,158,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,158,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,158,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,158,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,158,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,158,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,158,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,158,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,86,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,86,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,86,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,86,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,86,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,86,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,86,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,86,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,106,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,106,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,106,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,106,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,106,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,106,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,106,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,106,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,112,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,112,,same
,samples.tests.test_exponential,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,112,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,112,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,112,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,112,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,112,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,112,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,119,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,119,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,119,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,119,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,119,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,119,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,119,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,119,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,36,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,36,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,36,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,36,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,36,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,36,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,36,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,36,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,67,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,67,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,67,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,67,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,67,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,67,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,67,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,67,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,9,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,9,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,9,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,9,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,9,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,9,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,9,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,9,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,57,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,57,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,57,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,57,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,57,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,57,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,57,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,57,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,92,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,92,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,92,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,92,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,92,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,92,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,92,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,92,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,127,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,127,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,127,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,127,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,127,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,127,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,127,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,127,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,135,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,135,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,135,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,135,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,135,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,135,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,135,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,135,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,163,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,163,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,163,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,163,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,163,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,163,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,163,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,163,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,129,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,129,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,129,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,129,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,129,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,129,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,129,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,129,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,172,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,172,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,172,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,172,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,172,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,172,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,172,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,172,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,49,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,49,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,49,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,49,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,49,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,49,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,49,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,49,,same
,samples.tests.test_exponential,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,146,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,146,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,146,,same
,samples.tests.test_normal,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,146,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,146,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,146,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,146,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,146,,same
,samples.tests.test_exponential,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,10,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,10,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,10,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,10,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,10,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,10,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,10,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,10,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,11,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,11,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,11,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,11,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,11,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,11,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,11,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,11,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,161,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,161,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,161,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,161,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,161,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,161,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,161,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,161,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,25,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,25,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,25,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,25,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,25,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,25,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,25,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,25,,same
,samples.tests.test_exponential,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,81,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,81,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,81,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,81,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,81,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,81,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,81,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,81,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,69,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,69,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,69,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,69,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,69,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,69,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,69,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,69,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,126,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,126,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,126,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,126,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,126,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,126,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,126,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,126,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,61,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,61,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,61,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,61,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,61,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,61,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,61,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,61,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,105,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,105,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,105,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,105,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,105,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,105,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,105,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,105,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,51,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,51,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,51,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,51,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,51,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,51,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,51,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,51,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,20,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,20,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,20,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,20,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,20,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,20,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,20,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,20,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,166,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,166,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,166,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,166,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,166,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,166,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,166,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,166,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,174,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,174,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,174,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,174,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,174,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,174,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,174,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,174,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,164,,same
,samples.tests.test_exponential,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,164,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,164,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,164,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,164,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,164,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,164,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,164,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,44,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,44,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,44,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,44,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,44,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,44,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,44,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,44,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,82,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,82,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,82,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,82,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,82,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,82,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,82,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,82,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,173,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,173,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,173,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,173,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,173,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,173,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,173,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,173,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,167,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,167,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,167,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,167,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,167,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,167,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,167,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,167,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,114,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,114,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,114,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,114,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,114,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,114,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,114,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,114,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,46,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,46,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,46,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,46,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,46,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,46,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,46,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,46,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,71,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,71,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,71,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,71,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,71,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,71,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,71,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,71,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,15,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,15,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,15,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,15,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,15,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,15,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,15,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,15,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,115,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,115,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,115,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,115,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,115,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,115,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,115,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,115,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,138,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,138,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,138,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,138,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,138,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,138,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,138,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,138,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,13,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,13,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,13,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,13,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,13,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,13,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,13,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,13,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,59,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,59,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,59,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,59,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,59,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,59,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,59,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,59,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,90,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,90,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,90,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,90,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,90,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,90,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,90,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,90,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,47,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,47,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,47,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,47,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,47,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,47,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,47,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,47,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,169,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,169,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,169,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,169,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,169,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,169,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,169,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,169,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,118,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,118,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,118,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,118,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,118,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,118,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,118,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,118,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,83,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,83,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,83,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,83,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,83,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,83,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,83,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,83,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,93,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,93,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,93,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,93,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,93,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,93,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,93,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,93,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,38,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,38,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,38,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,38,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,38,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,38,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,38,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,38,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,74,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,74,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,74,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,74,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,74,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,74,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,74,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,74,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,144,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,144,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,144,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,144,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,144,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,144,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,144,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,144,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,79,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,79,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,79,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,79,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,79,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,79,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,79,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,79,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,48,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,48,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,48,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,48,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,48,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,48,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,48,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,48,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,96,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,96,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,96,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,96,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,96,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,96,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,96,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,96,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,156,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,156,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,156,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,156,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,156,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,156,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,156,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,156,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,149,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,149,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,149,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,149,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,149,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,149,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,149,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,149,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,53,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,53,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,53,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,53,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,53,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,53,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,53,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,53,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,124,,same
,samples.tests.test_exponential,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,124,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,124,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,124,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,124,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,124,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,124,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,124,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,2,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,2,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,2,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,2,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,2,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,2,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,2,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,2,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,102,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,102,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,102,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,102,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,102,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,102,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,102,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,102,,same
,samples.tests.test_exponential,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,54,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,54,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,54,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,54,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,54,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,54,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,54,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,54,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,72,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,72,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,72,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,72,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,72,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,72,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,72,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,72,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,26,,same
,samples.tests.test_exponential,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,26,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,26,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,26,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,26,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,26,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,26,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,26,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,77,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,77,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,77,,same
,samples.tests.test_normal,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,77,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,77,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,77,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,77,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,77,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,73,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,73,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,73,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,73,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,73,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,73,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,73,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,73,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,113,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,113,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,113,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,113,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,113,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,113,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,113,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,113,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,37,,same
,samples.tests.test_exponential,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,37,,same
,samples.tests.test_exponential,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,37,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,37,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,37,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,37,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,37,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,37,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,120,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,120,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,120,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,120,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,120,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,120,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,120,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,120,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,157,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,157,,same
,samples.tests.test_exponential,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,157,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,157,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,157,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,157,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,157,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,157,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,134,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,134,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,134,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,134,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,134,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,134,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,134,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,134,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,141,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,141,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,141,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,141,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,141,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,141,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,141,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,141,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,12,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,12,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,12,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,12,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,12,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,12,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,12,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,12,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,33,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,33,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,33,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,33,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,33,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,33,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,33,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,33,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,175,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,175,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,175,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,175,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,175,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,175,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,175,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,175,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,88,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,88,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,88,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,88,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,88,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,88,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,88,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,88,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,84,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,84,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,84,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,84,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,84,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,84,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,84,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,84,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,32,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,32,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,32,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,32,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,32,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,32,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,32,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,32,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,85,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,85,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,85,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,85,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,85,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,85,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,85,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,85,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,178,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,178,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,178,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,178,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,178,,same
,samples.tests.test_uniform,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,178,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,178,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,178,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,6,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,6,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,6,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,6,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,6,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,6,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,6,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,6,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,143,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,143,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,143,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,143,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,143,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,143,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,143,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,143,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,60,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,60,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,60,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,60,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,60,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,60,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,60,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,60,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,128,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,128,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,128,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,128,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,128,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,128,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,128,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,128,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,99,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,99,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,99,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,99,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,99,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,99,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,99,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,99,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,130,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,130,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,130,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,130,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,130,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,130,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,130,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,130,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,108,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,108,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,108,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,108,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,108,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,108,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,108,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,108,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,153,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,153,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,153,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,153,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,153,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,153,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,153,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,153,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,148,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,148,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,148,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,148,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,148,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,148,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,148,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,148,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,179,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,179,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,179,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,179,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,179,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,179,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,179,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,179,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,89,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,89,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,89,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,89,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,89,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,89,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,89,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,89,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,132,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,132,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,132,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,132,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,132,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,132,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,132,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,132,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,142,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,142,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,142,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,142,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,142,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,142,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,142,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,142,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,70,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,70,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,70,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,70,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,70,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,70,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,70,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,70,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,95,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,95,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,95,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,95,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,95,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,95,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,95,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,95,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,3,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,3,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,3,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,3,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,3,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,3,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,3,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,3,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,24,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,24,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,24,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,24,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,24,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,24,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,24,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,24,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,116,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,116,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,116,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,116,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,116,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,116,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,116,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,116,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,66,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,66,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,66,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,66,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,66,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,66,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,66,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,66,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,43,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,43,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,43,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,43,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,43,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,43,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,43,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,43,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,76,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,76,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,76,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,76,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,76,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,76,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,76,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,76,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,78,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,78,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,78,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,78,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,78,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,78,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,78,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,78,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,4,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,4,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,4,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,4,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,4,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,4,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,4,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,4,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,29,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,29,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,29,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,29,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,29,,same
,samples.tests.test_uniform,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,29,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,29,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,29,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,22,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,22,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,22,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,22,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,22,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,22,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,22,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,22,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,0,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,0,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,0,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,0,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,0,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,0,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,0,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,0,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,110,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,110,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,110,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,110,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,110,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,110,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,110,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,110,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,123,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,123,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,123,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,123,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,123,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,123,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,123,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,123,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,87,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,87,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,87,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,87,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,87,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,87,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,87,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,87,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,56,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,56,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,56,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,56,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,56,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,56,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,56,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,56,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,45,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,45,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,45,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,45,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,45,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,45,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,45,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,45,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,28,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,28,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,28,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,28,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,28,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,28,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,28,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,28,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,151,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,151,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,151,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,151,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,151,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,151,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,151,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,151,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,155,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,155,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,155,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,155,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,155,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,155,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,155,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,155,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,109,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,109,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,109,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,109,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,109,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,109,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,109,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,109,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,68,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,68,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,68,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,68,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,68,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,68,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,68,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,68,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,21,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,21,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,21,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,21,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,21,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,21,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,21,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,21,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,8,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,8,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,8,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,8,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,8,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,8,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,8,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,8,,same
,samples.tests.test_exponential,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,62,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,62,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,62,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,62,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,62,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,62,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,62,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,62,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,121,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,121,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,121,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,121,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,121,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,121,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,121,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,121,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,27,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,27,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,27,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,27,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,27,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,27,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,27,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,27,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,171,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,171,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,171,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,171,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,171,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,171,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,171,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,171,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,140,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,140,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,140,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,140,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,140,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,140,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,140,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,140,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,168,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,168,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,168,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,168,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,168,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,168,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,168,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,168,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,34,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,34,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,34,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,34,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,34,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,34,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,34,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,34,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,19,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,19,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,19,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,19,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,19,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,19,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,19,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,19,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,41,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,41,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,41,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,41,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,41,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,41,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,41,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,41,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,147,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,147,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,147,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,147,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,147,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,147,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,147,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,147,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,177,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,177,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,177,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,177,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,177,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,177,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,177,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,177,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,40,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,40,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,40,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,40,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,40,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,40,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,40,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,40,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,117,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,117,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,117,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,117,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,117,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,117,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,117,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,117,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,103,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,103,,same
,samples.tests.test_exponential,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,103,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,103,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,103,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,103,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,103,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,103,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,160,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,160,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,160,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,160,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,160,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,160,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,160,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,160,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,80,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,80,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,80,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,80,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,80,,same
,samples.tests.test_uniform,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,80,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,80,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,80,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,97,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,97,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,97,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,97,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,97,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,97,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,97,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,97,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,50,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,50,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,50,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,50,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,50,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,50,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,50,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,50,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,107,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,107,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,107,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,107,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,107,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,107,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,107,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,107,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,42,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,42,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,42,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,42,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,42,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,42,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,42,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,42,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,17,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,17,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,17,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,17,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,17,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,17,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,17,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,17,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,23,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,23,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,23,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,23,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,23,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,23,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,23,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,23,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,63,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,63,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,63,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,63,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,63,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,63,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,63,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,63,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,150,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,150,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,150,,same
,samples.tests.test_normal,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,150,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,150,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,150,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,150,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,150,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,137,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,137,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,137,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,137,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,137,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,137,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,137,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,137,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,104,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,104,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,104,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,104,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,104,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,104,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,104,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,104,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,18,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,18,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,18,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,18,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,18,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,18,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,18,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,18,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,136,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,136,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,136,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,136,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,136,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,136,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,136,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,136,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,94,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,94,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,94,,same
,samples.tests.test_normal,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,94,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,94,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,94,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,94,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,94,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,52,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,52,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,52,,same
,samples.tests.test_normal,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,52,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,52,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,52,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,52,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,52,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,154,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,154,,same
,samples.tests.test_exponential,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,154,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,154,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,154,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,154,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,154,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,154,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,58,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,58,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,58,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,58,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,58,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,58,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,58,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,58,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,139,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,139,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,139,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,139,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,139,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,139,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,139,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,139,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,39,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,39,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,39,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,39,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,39,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,39,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,39,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,39,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,170,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,170,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,170,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,170,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,170,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,170,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,170,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,170,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,30,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,30,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,30,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,30,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,30,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,30,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,30,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,30,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,101,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,101,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,101,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,101,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,101,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,101,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,101,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,101,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,65,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,65,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,65,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,65,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,65,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,65,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,65,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,65,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,75,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,75,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,75,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,75,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,75,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,75,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,75,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,75,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,165,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,165,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,165,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,165,,same
,samples.tests.test_normal,test_length,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_normal.py:18: TypeError']",,,165,,same
,samples.tests.test_uniform,test_response,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,165,,same
,samples.tests.test_uniform,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_uniform.py:18: TypeError']",,,165,,same
,samples.tests.test_uniform,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_uniform.py:25: TypeError']",,,165,,same
,samples.tests.test_exponential,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,31,,same
,samples.tests.test_exponential,test_data,Failed,TypeError: object of type &#x27;NoneType&#x27; has no len(),"[""E       TypeError: object of type 'NoneType' has no len()"", 'samples/tests/test_exponential.py:18: TypeError']",,,31,,same
,samples.tests.test_exponential,test_posivite,Failed,TypeError: &#x27;NoneType&#x27; object is not iterable,"[""E       TypeError: 'NoneType' object is not iterable"", 'samples/tests/test_exponential.py:25: TypeError']",,,31,,same
,samples.tests.test_normal,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,31,,same
,samples.tests.test_normal,test_length,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,31,,same
,samples.tests.test_uniform,test_response,Failed,AssertionError,"['        AssertionError if error is found.', 'E           AssertionError', 'svp/api_object.py:19: AssertionError']",,,31,,same
,samples.tests.test_uniform,test_data,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,31,,same
,samples.tests.test_uniform,test_posivite,Failed,"requests.exceptions.ChunkedEncodingError: (&#x27;Connection broken: IncompleteRead(0 bytes read, 563 more expected)&#x27;, IncompleteRead(0 bytes read, 563 more expected))","['    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', '        with self._error_catcher():', 'E                   urllib3.exceptions.IncompleteRead: IncompleteRead(0 bytes read, 563 more expected)', 'The above exception was the direct cause of the following exception:', '>       with self._error_catcher():', ""typ = <class 'urllib3.exceptions.IncompleteRead'>"", '                raise RuntimeError(""generator didn\'t stop"")', '                # tell if we get the same exception back', '    def _error_catcher(self) -> typing.Generator[None, None, None]:', '        Catch low-level python exceptions, instead re-raising urllib3', '        variants, so that low-level exceptions are not leaked in the', ""                # FIXME: Ideally we'd like to include the url in the ReadTimeoutError but"", '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '            except BaseSSLError as e:', '                # FIXME: Is there a better way to differentiate between SSLErrors?', '                    # SSL errors related to framing/MAC get wrapped and reraised here', '                    raise SSLError(e) from e', '                raise ReadTimeoutError(self._pool, None, ""Read timed out."") from e  # type: ignore[arg-type]', '>               raise ProtocolError(arg, e) from e', ""E               urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/response.py:772: ProtocolError', 'During handling of the above exception, another exception occurred:', '            except ProtocolError as e:', '>               raise ChunkedEncodingError(e)', ""E               requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(0 bytes read, 563 more expected)', IncompleteRead(0 bytes read, 563 more expected))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/models.py:822: ChunkedEncodingError']",,,31,,same
