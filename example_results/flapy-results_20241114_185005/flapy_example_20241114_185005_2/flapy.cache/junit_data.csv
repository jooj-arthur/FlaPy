file,class,name,verdict,message,errors_in_stacktrace,errors_in_system_err,type,num,test_to_be_run,order
,test_flaky,test_not_flaky,Passed,NO MESSAGE,,,,0,test_flaky.py,same
,test_flaky,test_concurrency,Failed,"assert 74261 == 100000
  +74261
  -100000",['test_flaky.py:53: AssertionError'],,,0,test_flaky.py,same
,test_flaky,test_floating_point_operation,Failed,"assert 0.30000000000000004 == 0.3
  +0.30000000000000004
  -0.3",['test_flaky.py:57: AssertionError'],,,0,test_flaky.py,same
,test_flaky,test_random,Failed,"assert 0 == 1
  +0
  -1",['test_flaky.py:61: AssertionError'],,,0,test_flaky.py,same
,test_flaky,test_time,Passed,NO MESSAGE,,,,0,test_flaky.py,same
,test_flaky,test_network_remote_connection_failure,Failed,"requests.exceptions.ConnectionError: HTTPConnectionPool(host=&#x27;heise.de&#x27;, port=80): Max retries exceeded with url: / (Caused by NewConnectionError(&#x27;&lt;urllib3.connection.HTTPConnection object at 0x7fd3d2c1ea70&gt;: Failed to establish a new connection: [Errno 101] Network is unreachable&#x27;))","['        except UnicodeError:', '            raise LocationParseError(f""\'{host}\', label empty or too long"") from None', '            except OSError as _:', '        except UnicodeError:', '            raise LocationParseError(f""\'{host}\', label empty or too long"") from None', 'E               OSError: [Errno 101] Network is unreachable', '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/util/connection.py:73: OSError', 'The above exception was the direct cause of the following exception:', '            :class:`~urllib3.exceptions.MaxRetryError` exception.', '            Pass an integer number to retry connection errors that many times,', '            but no other types of errors. Pass zero to never retry.', '            If ``False``, then retries are disabled and any exception is raised', '            immediately. Also, instead of raising a MaxRetryError on redirects,', '            consistent else will raise HostChangedError. When ``False``, you can', '            block for ``pool_timeout`` seconds and raise EmptyPoolError if no', '            raise HostChangedError(self, url, retries)', '        # Must keep the exception bound to a separate variable or else Python 3', '        # complains about UnboundLocalError.', '                except (BaseSSLError, OSError, SocketTimeout) as e:', '            :class:`~urllib3.exceptions.MaxRetryError` exception.', '            Pass an integer number to retry connection errors that many times,', '            but no other types of errors. Pass zero to never retry.', '            If ``False``, then retries are disabled and any exception is raised', '            immediately. Also, instead of raising a MaxRetryError on redirects,', '            value of Content-Length header, if present. Otherwise, raise error.', '            except (SocketTimeout, BaseSSLError) as e:', ""        # so we need to wrap errors with 'ProxyError' here too."", '            OSError,', '            NewConnectionError,', '            TimeoutError,', '            BaseSSLError,', '            CertificateError,', '            SSLError,', '            new_e: Exception = e', '            if isinstance(e, (BaseSSLError, CertificateError)):', '                new_e = SSLError(e)', '                new_e, (OSError, NewConnectionError, TimeoutError, SSLError)', '                new_e = _wrap_proxy_error(new_e, conn.proxy.scheme)', '        except socket.gaierror as e:', '            raise NameResolutionError(self.host, self, e) from e', '            raise ConnectTimeoutError(', '        except OSError as e:', '>           raise NewConnectionError(', 'E           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7fd3d2c1ea70>: Failed to establish a new connection: [Errno 101] Network is unreachable', '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/connection.py:214: NewConnectionError', 'The above exception was the direct cause of the following exception:', '        except LocationValueError as e:', '            except ValueError:', '                raise ValueError(', '            :class:`~urllib3.exceptions.MaxRetryError` exception.', '            Pass an integer number to retry connection errors that many times,', '            but no other types of errors. Pass zero to never retry.', '            If ``False``, then retries are disabled and any exception is raised', '            immediately. Also, instead of raising a MaxRetryError on redirects,', '            consistent else will raise HostChangedError. When ``False``, you can', '            block for ``pool_timeout`` seconds and raise EmptyPoolError if no', '            raise HostChangedError(self, url, retries)', '        # Must keep the exception bound to a separate variable or else Python 3', '        # complains about UnboundLocalError.', '                except (BaseSSLError, OSError, SocketTimeout) as e:', '        except EmptyPoolError:', '            TimeoutError,', '            HTTPException,', '            OSError,', '            ProtocolError,', '            BaseSSLError,', '            SSLError,', '            CertificateError,', '            ProxyError,', '            # Discard the connection for these exceptions. It will be', '            new_e: Exception = e', '            if isinstance(e, (BaseSSLError, CertificateError)):', '                new_e = SSLError(e)', '                    OSError,', '                    NewConnectionError,', '                    TimeoutError,', '                    SSLError,', '                    HTTPException,', '                new_e = _wrap_proxy_error(new_e, conn.proxy.scheme)', '            elif isinstance(new_e, (OSError, HTTPException)):', '                new_e = ProtocolError(""Connection aborted."", new_e)', '                method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]', ""error = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fd3d2c1ea70>: Failed to establish a new connection: [Errno 101] Network is unreachable')"", '        error: Exception | None = None,', '        :param Exception error: An error encountered during the request, or', '        if self.total is False and error:', '            # Disabled, indicate to re-raise the error.', '            raise reraise(type(error), error, _stacktrace)', '        if error and self._is_connection_error(error):', '                raise reraise(type(error), error, _stacktrace)', '        elif error and self._is_read_error(error):', '                raise reraise(type(error), error, _stacktrace)', '        elif error:', '            # Incrementing because of a server error like a 500 in', '            cause = ResponseError.GENERIC_ERROR', '                cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)', '            RequestHistory(method, url, error, status, redirect_location),', '            reason = error or ResponseError(cause)', '>           raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]', ""E           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='heise.de', port=80): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fd3d2c1ea70>: Failed to establish a new connection: [Errno 101] Network is unreachable'))"", '../flapy_virtual_env/lib/python3.10/site-packages/urllib3/util/retry.py:519: MaxRetryError', 'During handling of the above exception, another exception occurred:', '        except LocationValueError as e:', '            except ValueError:', '                raise ValueError(', '        except (ProtocolError, OSError) as err:', '            raise ConnectionError(err, request=request)', '        except MaxRetryError as e:', '            if isinstance(e.reason, ConnectTimeoutError):', '                if not isinstance(e.reason, NewConnectionError):', '            if isinstance(e.reason, ResponseError):', '                raise RetryError(e, request=request)', '            if isinstance(e.reason, _ProxyError):', '                raise ProxyError(e, request=request)', '            if isinstance(e.reason, _SSLError):', '                raise SSLError(e, request=request)', '>           raise ConnectionError(e, request=request)', ""E           requests.exceptions.ConnectionError: HTTPConnectionPool(host='heise.de', port=80): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fd3d2c1ea70>: Failed to establish a new connection: [Errno 101] Network is unreachable'))"", '../flapy_virtual_env/lib/python3.10/site-packages/requests/adapters.py:700: ConnectionError']",,,0,test_flaky.py,same
,test_flaky,test_io,Passed,NO MESSAGE,,,,0,test_flaky.py,same
,test_flaky,test_numpy_random,Failed,"assert 0 == 1
  +0
  -1",['test_flaky.py:84: AssertionError'],,,0,test_flaky.py,same
,test_flaky,test_unordered_collections,Passed,NO MESSAGE,,,,0,test_flaky.py,same
,test_flaky,test_numeric_operation_32bit,Passed,NO MESSAGE,,,,0,test_flaky.py,same
,test_flaky,test_numeric_operation_64bit,Failed,"assert np.int64(-9223372036854775808) == 9223372036854775808
  +np.int64(-9223372036854775808)
  -9223372036854775808","['        a = np.array([2 ** 63 - 1], dtype=int) + 1  # Windows: Overflow Error', '>       assert a[0] == ref  # Linux: Assertion Error', 'test_flaky.py:111: AssertionError']",,,0,test_flaky.py,same
,test_flaky,test_memory_usage,Failed,"assert 54 == 30
  +54
  -30",['test_flaky.py:115: AssertionError'],,,0,test_flaky.py,same
,test_flaky,test_victim,Passed,NO MESSAGE,,,,0,test_flaky.py,same
,test_flaky,test_polluter,Passed,NO MESSAGE,,,,0,test_flaky.py,same
